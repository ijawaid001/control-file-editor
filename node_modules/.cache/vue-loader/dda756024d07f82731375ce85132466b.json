{"remainingRequest":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\src\\components\\ReadFileList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\src\\components\\ReadFileList.vue","mtime":1618850370963},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgZmlsZWxpc3QgZnJvbSAnLi4vYXNzZXRzL2ZpbGVsaXN0Lmpzb24nDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogJ1JlYWRGaWxlTGlzdCcsDQogICAgZGF0YTogKCkgPT4gKHsNCiAgICAgICAgbXlGaWxlOiBbXSwNCiAgICAgICAgcmVSZW5kZXI6IDAsDQogICAgICAgIGRpYWxvZzogZmFsc2UsDQogICAgICAgIGl0ZW1zUGVyUGFnZTogMTAsDQogICAgICAgIHBhZ2U6IDEsDQogICAgICAgIHBhZ2VDb3VudDogMSwNCiAgICAgICAgaXRlbVRvRWRpdDogJycsDQogICAgICAgIGVkaXRlZEl0ZW06ICcnLA0KICAgICAgICBlZGl0QXR0cmlidXRlOiAnJywNCiAgICAgICAgc2hvd0JpZ0lucHV0OiBmYWxzZSwNCiAgICAgICAgcGVyc2lzdGVudERpYWxvZzogZmFsc2UsDQogICAgICAgIGhlYWRlcnM6IFsNCiAgICAgICAgICAgIHsgdGV4dDonRmlsZSBSb290JywgdmFsdWU6ICdGaWxlcm9vdCd9LA0KICAgICAgICAgICAgeyB0ZXh0OidBY3Rpb24nLCB2YWx1ZTogJ0FjdGlvbid9LA0KICAgICAgICAgICAgeyB0ZXh0OidTY2hlbWEnLCB2YWx1ZTogJ1NjaGVtYSd9LA0KICAgICAgICAgICAgeyB0ZXh0OidEYXRhIFR5cGUnLCB2YWx1ZTogJ0RhdGFUeXBlJ30sDQogICAgICAgICAgICB7IHRleHQ6J1RhYmxlJywgdmFsdWU6ICdUYWJsZSd9LA0KICAgICAgICAgICAgeyB0ZXh0OidQcmltYXJ5IEtleScsIHZhbHVlOiAnUHJpbWFyeV9LZXknfSwNCiAgICAgICAgICAgIHsgdGV4dDonSGFzaCBLZXlzJywgdmFsdWU6ICdIYXNoX0tleXMnfSwNCiAgICAgICAgXSwNCiAgICAgICAgaXRlbXM6IFtdLA0KICAgIH0pLA0KICAgIGNvbXB1dGVkOiB7DQogICAgICAgIHJ1bGVzICgpIHsNCiAgICAgICAgICAgIGNvbnN0IHJ1bGVzID0gW10NCiAgICAgICAgICAgIGlmKHRoaXMuZWRpdEF0dHJpYnV0ZSA9ICdGaWxlcm9vdCcpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBydWxlMSA9IHZhbHVlID0+ICEhdmFsdWUgfHwgJ1JlcXVpcmVkLicNCiAgICAgICAgICAgICAgICBydWxlcy5wdXNoKHJ1bGUxKQ0KICAgICAgICAgICAgICAgIHZhciBmaWxlUm9vdHMgPSBbXQ0KICAgICAgICAgICAgICAgIGZvciAodmFyIGkgb2YgdGhpcy5pdGVtcykgew0KICAgICAgICAgICAgICAgICAgICBmaWxlUm9vdHMucHVzaChpWydGaWxlcm9vdCddKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBjb25zdCBydWxlMiA9IHZhbHVlID0+ICh0aGlzLml0ZW1Ub0VkaXRbJ0ZpbGVyb290J10gPT0gdmFsdWUpIHx8IChmaWxlUm9vdHMuaW5kZXhPZih2YWx1ZSkgPT0gLTEpIHx8ICdEdXBsaWNhdGUgRmlsZSBSb290Jw0KICAgICAgICAgICAgICAgIHJ1bGVzLnB1c2gocnVsZTIpDQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gcnVsZXMNCiAgICAgICAgfQ0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICByZWFkRmlsZShmaWxlKSB7DQogICAgICAgICAgICB0aGlzLmFzeW5jUmVhZEZpbGUoZmlsZSkudGhlbihyZXN1bHQgPT4gew0KICAgICAgICAgICAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShyZXN1bHQpDQogICAgICAgICAgICAgICAgdGhpcy5pdGVtcyA9IE9iamVjdC52YWx1ZXMoZGF0YSkNCiAgICAgICAgICAgICAgICB0aGlzLm15RmlsZSA9IE9iamVjdC52YWx1ZXMoZGF0YSkNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm15RmlsZSkNCiAgICAgICAgICAgICAgICB0aGlzLmZvcmNlUmVuZGVyZXIoKQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIA0KICAgICAgICB9LA0KICAgICAgICBhc3luYyBhc3luY1JlYWRGaWxlKGZpbGUpIHsNCiAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gew0KICAgICAgICAgICAgICAgIGxldCBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKQ0KICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gKGUpID0+IHJlc29sdmUoZmlsZVJlYWRlci5yZXN1bHQpDQogICAgICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNUZXh0KGZpbGUpDQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdA0KICAgICAgICB9LA0KICAgICAgICBmb3JjZVJlbmRlcmVyKCkgew0KICAgICAgICAgICAgdGhpcy5yZVJlbmRlciArPSAxDQogICAgICAgIH0sDQogICAgICAgIGNsaWNrZWQoaXRlbSwgYXR0cmlidXRlLCBwZXJzaXN0ZW50KSB7DQogICAgICAgICAgICB0aGlzLnBlcnNpc3RlbnREaWFsb2cgPSBwZXJzaXN0ZW50DQogICAgICAgICAgICB0aGlzLml0ZW1Ub0VkaXQgPSBpdGVtDQogICAgICAgICAgICB0aGlzLmVkaXRlZEl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLml0ZW1Ub0VkaXQpDQogICAgICAgICAgICB0aGlzLmVkaXRBdHRyaWJ1dGUgPSBhdHRyaWJ1dGUNCiAgICAgICAgICAgIGlmICh0aGlzLmVkaXRBdHRyaWJ1dGUgPT0gJ1NjaGVtYScgfHwgdGhpcy5lZGl0QXR0cmlidXRlID09ICdEYXRhVHlwZScgfHwgdGhpcy5lZGl0QXR0cmlidXRlID09ICdIYXNoX0tleXMnKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93QmlnSW5wdXQgPSB0cnVlDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dCaWdJbnB1dCA9IGZhbHNlDQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmRpYWxvZyA9IHRydWUNCiAgICAgICAgfSwNCiAgICAgICAgc2F2ZUF0dHJpYnV0ZSgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLiRyZWZzLmZvcm0udmFsaWRhdGUoKSkgew0KICAgICAgICAgICAgICAgIHRoaXMuZGlhbG9nID0gZmFsc2UNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5pdGVtVG9FZGl0W3RoaXMuZWRpdEF0dHJpYnV0ZV0gIT0gdGhpcy5lZGl0ZWRJdGVtW3RoaXMuZWRpdEF0dHJpYnV0ZV0pIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZWRpdEF0dHJpYnV0ZSA9PSAnU2NoZW1hJyB8fCB0aGlzLmVkaXRBdHRyaWJ1dGUgPT0gJ0RhdGFUeXBlJyB8fCB0aGlzLmVkaXRBdHRyaWJ1dGUgPT0gJ0hhc2hfS2V5cycpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZWRpdGVkSXRlbVt0aGlzLmVkaXRBdHRyaWJ1dGVdID0gKHRoaXMuZWRpdGVkSXRlbVt0aGlzLmVkaXRBdHRyaWJ1dGVdKS5zcGxpdCgiLCIpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZm9yICh2YXIgaSBvZiB0aGlzLml0ZW1zKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChpID09IHRoaXMuaXRlbVRvRWRpdCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtc1t0aGlzLml0ZW1zLmluZGV4T2YoaSldID0gdGhpcy5lZGl0ZWRJdGVtDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5mb3JjZVJlbmRlcmVyKCkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgcmVzZXRBdHRyaWJ1dGUoKSB7DQogICAgICAgICAgICB0aGlzLmVkaXRlZEl0ZW1bdGhpcy5lZGl0QXR0cmlidXRlXSA9IHRoaXMuaXRlbVRvRWRpdFt0aGlzLmVkaXRBdHRyaWJ1dGVdDQogICAgICAgIH0sDQogICAgICAgIG5ld1JlY29yZCgpIHsNCiAgICAgICAgICAgIHZhciBuZXdJdGVtID0ge30NCiAgICAgICAgICAgIGZvciAodmFyIGhlYWRlciBvZiB0aGlzLmhlYWRlcnMpIHsNCiAgICAgICAgICAgICAgICBuZXdJdGVtW2hlYWRlci52YWx1ZV0gPSAnJw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5pdGVtcy5wdXNoKG5ld0l0ZW0pDQogICAgICAgICAgICB0aGlzLmZvcmNlUmVuZGVyZXIoKQ0KICAgICAgICAgICAgaWYgKE1hdGguY2VpbCh0aGlzLml0ZW1zLmxlbmd0aCAvIHRoaXMuaXRlbXNQZXJQYWdlKSA+IHRoaXMucGFnZUNvdW50KSB7DQogICAgICAgICAgICAgICAgdGhpcy5wYWdlQ291bnQgKz0gMQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5wYWdlID0gdGhpcy5wYWdlQ291bnQNCiAgICAgICAgICAgIHRoaXMuY2xpY2tlZChuZXdJdGVtLCAnRmlsZXJvb3QnLCB0cnVlKQ0KICAgICAgICAgICAgDQogICAgICAgIH0sDQogICAgICAgIHBhZ2luYXRlKHZhbCkgew0KICAgICAgICAgICAgdGhpcy5wYWdlID0gdmFsLnBhZ2UNCiAgICAgICAgICAgIHRoaXMuaXRlbXNQZXJQYWdlID0gdmFsLml0ZW1zUGVyUGFnZQ0KICAgICAgICAgICAgdGhpcy5wYWdlQ291bnQgPSB2YWwucGFnZUNvdW50DQogICAgICAgIH0sDQogICAgICAgIHVwbG9hZEZpbGUoKSB7DQogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiaW5wdXRGaWxlIikuY2xpY2soKQ0KICAgICAgICB9LA0KICAgICAgICByZXNldEZpbGUoKSB7DQogICAgICAgICAgICB0aGlzLml0ZW1zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLm15RmlsZSkpDQogICAgICAgICAgICB0aGlzLmZvcmNlUmVuZGVyZXIoKQ0KICAgICAgICAgICAgdGhpcy5wYWdlID0gMQ0KICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkKCkgew0KICAgICAgICANCiAgICB9DQp9DQo="},{"version":3,"sources":["ReadFileList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"ReadFileList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-container>\r\n        <v-row>\r\n            <v-btn elevation=\"2\" @click=\"uploadFile()\">Import File</v-btn>\r\n            <v-spacer></v-spacer>\r\n            <v-btn elevation=\"2\" @click=\"resetFile()\">Reset File</v-btn>\r\n        </v-row>\r\n        <v-file-input \r\n        v-model=\"myFile\"\r\n        prepend-icon=\"\"\r\n        accept=\".json\"\r\n        class=\"hide\"\r\n        id=\"inputFile\"\r\n        @change=\"readFile\"\r\n        ></v-file-input>\r\n        <v-data-table\r\n            :headers = \"headers\"\r\n            :items = \"items\"\r\n            v-bind:items-per-page= \"itemsPerPage\"\r\n            v-bind:page= \"page\"\r\n            class=\"elevation-1\"\r\n            id=\"table\"\r\n            :key=\"reRender\"\r\n            @pagination=\"paginate\"\r\n        >\r\n            <template v-slot:body=\"{ items }\">\r\n                <tbody>\r\n                    <tr v-for=\"item in items\" :key=\"item.Fileroot\">\r\n                        <td @click=\"clicked(item, 'Fileroot', false)\">{{ item.Fileroot }}</td>\r\n                        <td @click=\"clicked(item, 'Action', false)\">{{ item.Action }}</td>\r\n                        <td @click=\"clicked(item, 'Schema', false)\">{{ item.Schema.toString().slice(0,50) }}</td>\r\n                        <td @click=\"clicked(item, 'DataType', false)\">{{ item.DataType.toString().slice(0,50) }}</td>\r\n                        <td @click=\"clicked(item, 'Table', false)\">{{ item.Table }}</td>\r\n                        <td @click=\"clicked(item, 'Primary_Key', false)\">{{ item.Primary_Key }}</td>\r\n                        <td @click=\"clicked(item, 'Hash_Keys', false)\">{{ item.Hash_Keys.toString().slice(0,50) }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </template>\r\n        </v-data-table>\r\n\r\n        <v-row>\r\n            <v-btn elevation=\"2\" @click=\"newRecord\">Create New Record</v-btn>\r\n            <v-btn elevation=\"2\">Save as new file</v-btn>\r\n        </v-row>\r\n\r\n\r\n        <v-dialog v-model=\"dialog\" width=\"500\" v-bind:persistent=\"persistentDialog\">\r\n            <v-card>\r\n                <v-card-title>\r\n                    Edit {{editAttribute}}\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-form ref=\"form\">\r\n                        <v-textarea v-if=\"showBigInput\"\r\n                        v-model=\"editedItem[editAttribute]\"\r\n                        auto-grow\r\n                        autofocus\r\n                        rows=\"1\"\r\n                        ></v-textarea>\r\n                        <v-text-field v-else v-model=\"editedItem[editAttribute]\"\r\n                        :rules=\"rules\"\r\n                        hide-details=\"auto\"\r\n                        ></v-text-field>\r\n                    </v-form>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        text\r\n                        @click=\"resetAttribute\"\r\n                    >\r\n                        Reset\r\n                    </v-btn>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        text\r\n                        @click=\"saveAttribute\"\r\n                    >\r\n                        Save\r\n                    </v-btn>\r\n                    </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport filelist from '../assets/filelist.json'\r\nexport default {\r\n    name: 'ReadFileList',\r\n    data: () => ({\r\n        myFile: [],\r\n        reRender: 0,\r\n        dialog: false,\r\n        itemsPerPage: 10,\r\n        page: 1,\r\n        pageCount: 1,\r\n        itemToEdit: '',\r\n        editedItem: '',\r\n        editAttribute: '',\r\n        showBigInput: false,\r\n        persistentDialog: false,\r\n        headers: [\r\n            { text:'File Root', value: 'Fileroot'},\r\n            { text:'Action', value: 'Action'},\r\n            { text:'Schema', value: 'Schema'},\r\n            { text:'Data Type', value: 'DataType'},\r\n            { text:'Table', value: 'Table'},\r\n            { text:'Primary Key', value: 'Primary_Key'},\r\n            { text:'Hash Keys', value: 'Hash_Keys'},\r\n        ],\r\n        items: [],\r\n    }),\r\n    computed: {\r\n        rules () {\r\n            const rules = []\r\n            if(this.editAttribute = 'Fileroot') {\r\n                const rule1 = value => !!value || 'Required.'\r\n                rules.push(rule1)\r\n                var fileRoots = []\r\n                for (var i of this.items) {\r\n                    fileRoots.push(i['Fileroot'])\r\n                }\r\n                const rule2 = value => (this.itemToEdit['Fileroot'] == value) || (fileRoots.indexOf(value) == -1) || 'Duplicate File Root'\r\n                rules.push(rule2)\r\n            }\r\n            return rules\r\n        }\r\n    },\r\n    methods: {\r\n        readFile(file) {\r\n            this.asyncReadFile(file).then(result => {\r\n                var data = JSON.parse(result)\r\n                this.items = Object.values(data)\r\n                this.myFile = Object.values(data)\r\n                console.log(this.myFile)\r\n                this.forceRenderer()\r\n            })\r\n            \r\n        },\r\n        async asyncReadFile(file) {\r\n            let result = await new Promise((resolve) => {\r\n                let fileReader = new FileReader()\r\n                fileReader.onload = (e) => resolve(fileReader.result)\r\n                fileReader.readAsText(file)\r\n            })\r\n            return result\r\n        },\r\n        forceRenderer() {\r\n            this.reRender += 1\r\n        },\r\n        clicked(item, attribute, persistent) {\r\n            this.persistentDialog = persistent\r\n            this.itemToEdit = item\r\n            this.editedItem = Object.assign({}, this.itemToEdit)\r\n            this.editAttribute = attribute\r\n            if (this.editAttribute == 'Schema' || this.editAttribute == 'DataType' || this.editAttribute == 'Hash_Keys') {\r\n                this.showBigInput = true\r\n            }\r\n            else {\r\n                this.showBigInput = false\r\n            }\r\n            this.dialog = true\r\n        },\r\n        saveAttribute() {\r\n            if (this.$refs.form.validate()) {\r\n                this.dialog = false\r\n                if (this.itemToEdit[this.editAttribute] != this.editedItem[this.editAttribute]) {\r\n                    if (this.editAttribute == 'Schema' || this.editAttribute == 'DataType' || this.editAttribute == 'Hash_Keys') {\r\n                        this.editedItem[this.editAttribute] = (this.editedItem[this.editAttribute]).split(\",\")\r\n                    }\r\n                }\r\n                for (var i of this.items) {\r\n                    if (i == this.itemToEdit) {\r\n                        this.items[this.items.indexOf(i)] = this.editedItem\r\n                    }\r\n                }\r\n                this.forceRenderer()\r\n            }\r\n        },\r\n        resetAttribute() {\r\n            this.editedItem[this.editAttribute] = this.itemToEdit[this.editAttribute]\r\n        },\r\n        newRecord() {\r\n            var newItem = {}\r\n            for (var header of this.headers) {\r\n                newItem[header.value] = ''\r\n            }\r\n            this.items.push(newItem)\r\n            this.forceRenderer()\r\n            if (Math.ceil(this.items.length / this.itemsPerPage) > this.pageCount) {\r\n                this.pageCount += 1\r\n            }\r\n            this.page = this.pageCount\r\n            this.clicked(newItem, 'Fileroot', true)\r\n            \r\n        },\r\n        paginate(val) {\r\n            this.page = val.page\r\n            this.itemsPerPage = val.itemsPerPage\r\n            this.pageCount = val.pageCount\r\n        },\r\n        uploadFile() {\r\n            document.getElementById(\"inputFile\").click()\r\n        },\r\n        resetFile() {\r\n            this.items = JSON.parse(JSON.stringify(this.myFile))\r\n            this.forceRenderer()\r\n            this.page = 1\r\n        }\r\n    },\r\n    mounted() {\r\n        \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .v-btn {\r\n        margin: 2em 1em;\r\n    }\r\n\r\n    .hide {\r\n        display: none!important;\r\n    }\r\n</style>\r\n"]}]}