{"remainingRequest":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\src\\components\\ExpectedFiles.vue?vue&type=style&index=0&id=41dbb8aa&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\src\\components\\ExpectedFiles.vue","mtime":1619788775980},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudi1idG4gewogICAgbWFyZ2luOiAyZW0gMWVtOwp9CgouaGlkZSB7CiAgICBkaXNwbGF5OiBub25lIWltcG9ydGFudDsKfQoKLmRlbGV0ZUljb24gewogICAgbWFyZ2luLWxlZnQ6IDFlbTsKICAgIG1hcmdpbi10b3A6MTZweDsKICAgIGZvbnQtc2l6ZTogMzBweCFpbXBvcnRhbnQ7Cn0KCi5jb250YWluZXIgewogICAgbWFyZ2luLXRvcDogNjRweCFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["ExpectedFiles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4RA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ExpectedFiles.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-container>\r\n        <v-row>\r\n            <v-btn elevation=\"2\" @click=\"newRecord\">Create New Record</v-btn>\r\n            <v-spacer></v-spacer>\r\n            <v-btn elevation=\"2\" @click=\"resetFile()\">Reset Expected Files</v-btn>\r\n        </v-row>\r\n        <v-card>\r\n            <v-card-title>\r\n                Expected Files\r\n                <v-spacer></v-spacer>\r\n                <v-text-field\r\n                    v-model=\"search\"\r\n                    append-icon=\"mdi-magnify\"\r\n                    label=\"Search\"\r\n                    single-line\r\n                    hide-details\r\n                    class=\"searchInput\"\r\n                ></v-text-field>\r\n                <v-icon class=\"deleteIcon\" :disabled=\"disableDelete\" @click=\"deleteSelected\">mdi-delete</v-icon>\r\n            </v-card-title>\r\n            <v-data-table\r\n                v-model=\"selected\"\r\n                show-select\r\n                :headers = \"headers\"\r\n                :items = \"items\"\r\n                :search=\"search\"\r\n                v-bind:items-per-page= \"itemsPerPage\"\r\n                v-bind:page= \"page\"\r\n                class=\"elevation-1\"\r\n                id=\"table\"\r\n                :key=\"reRender\"\r\n                @pagination=\"paginate\"\r\n            >\r\n                <template v-slot:body=\"{ items }\">\r\n                    <tbody>\r\n                        <tr v-for=\"item in items\" :key=\"item.FileRoot\">\r\n                            <td><v-checkbox :value=\"item.FileRoot\" v-model=\"selected\"></v-checkbox></td>\r\n                            <td @click=\"clicked(item, 'FileNameRegex', false)\">{{ item.FileNameRegex }}</td>\r\n                            <td @click=\"clicked(item, 'FileRoot', false)\">{{ item.FileRoot }}</td>\r\n                            <td @click=\"clicked(item, 'FileSchema', false)\">{{ displayList(item.FileSchema, 'FileSchema', item) }}</td>\r\n                            <td @click=\"clicked(item, 'RemappingRequired', false)\">{{ item.RemappingRequired }}</td>\r\n                            <td @click=\"clicked(item, 'Key_Fields', false)\">{{ displayList(item.Key_Fields, 'Key_Fields', item) }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </template>\r\n                \r\n            </v-data-table>\r\n        </v-card>\r\n\r\n\r\n        <v-dialog v-model=\"dialog\" width=\"500\" v-bind:persistent=\"persistentDialog\">\r\n            <v-card>\r\n                <v-card-title>\r\n                    Edit {{editAttribute}}\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-form ref=\"form\">\r\n                        <v-textarea v-if=\"showBigInput\"\r\n                        v-model=\"editedItem[editAttribute]\"\r\n                        auto-grow\r\n                        autofocus\r\n                        rows=\"1\"\r\n                        ></v-textarea>\r\n                        <v-text-field v-else v-model=\"editedItem[editAttribute]\"\r\n                        :rules=\"rules\"\r\n                        hide-details=\"auto\"\r\n                        ></v-text-field>\r\n                    </v-form>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        text\r\n                        @click=\"resetAttribute\"\r\n                    >\r\n                        Reset\r\n                    </v-btn>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        text\r\n                        @click=\"saveAttribute\"\r\n                    >\r\n                        Save\r\n                    </v-btn>\r\n                    </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ExpectedFiles',\r\n    props: ['portcos', 'portcoToEdit'],\r\n    data: () => ({\r\n        myFile: [],\r\n        items: [],\r\n        originalItems: [],\r\n        myPortco: '',\r\n        fileName: '',\r\n        reRender: 0,\r\n        search: '',\r\n        rules: [],\r\n        selected: [],\r\n        dialog: false,\r\n        itemsPerPage: 10,\r\n        page: 1,\r\n        pageCount: 1,\r\n        itemToEdit: '',\r\n        editedItem: '',\r\n        editAttribute: '',\r\n        showBigInput: false,\r\n        persistentDialog: false,\r\n        headers: [\r\n            { text:'File Name Regex', value: 'FileNameRegex'},\r\n            { text:'File Root', value: 'FileRoot'},\r\n            { text:'File Schema', value: 'FileSchema', width: '35%'},\r\n            { text:'Remapping Required', value: 'RemappingRequired'},\r\n            { text:'Key Fields', value: 'Key_Fields', width: '25%'}\r\n        ],\r\n        listHeaders: ['FileSchema','Key_Fields'],\r\n        \r\n    }),\r\n    computed: {\r\n        disableDelete() {\r\n            if (this.selected.length > 0) {\r\n                return false\r\n            }\r\n            else {\r\n                return true\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        forceRenderer() {\r\n            this.reRender += 1\r\n        },\r\n        displayList(listToDisplay, attribute, item) {\r\n            if(item != null) {\r\n                if (attribute === 'FileSchema' && listToDisplay.length > 70) {\r\n                    listToDisplay = listToDisplay.slice(0,listToDisplay.indexOf(\" \", 70)).concat(\" ...\")\r\n                }\r\n                else if (attribute === 'Key_Fields' && listToDisplay.length > 50) {\r\n                    listToDisplay = listToDisplay.slice(0,listToDisplay.indexOf(\" \", 50)).concat(\" ...\")\r\n                }\r\n            }\r\n            return listToDisplay\r\n        },\r\n        clicked(item, attribute, persistent) {\r\n            this.persistentDialog = persistent\r\n            this.itemToEdit = item\r\n            this.editedItem = Object.assign({}, this.itemToEdit)\r\n            this.editAttribute = attribute\r\n            if (this.listHeaders.includes(this.editAttribute)) {\r\n                this.showBigInput = true\r\n            }\r\n            else {\r\n                this.showBigInput = false\r\n            }\r\n            this.rulesFunc()\r\n            this.dialog = true\r\n        },\r\n        saveAttribute() {\r\n            if (this.$refs.form.validate()) {\r\n                this.dialog = false\r\n                for (var i of this.items) {\r\n                    if (i == this.itemToEdit) {\r\n                        this.items[this.items.indexOf(i)] = this.editedItem\r\n                    }\r\n                }\r\n                this.forceRenderer()\r\n            }\r\n        },\r\n        resetAttribute() {\r\n            this.editedItem[this.editAttribute] = this.itemToEdit[this.editAttribute]\r\n        },\r\n        newRecord() {\r\n            var newItem = {}\r\n            for (var header of this.headers) {\r\n                if(header.value !== \"Key_Fields\") {\r\n                    newItem[header.value] = ''\r\n                }\r\n            }\r\n            newItem['Delimiter'] = \"\\t\"\r\n            newItem['HeaderRowsToRemove'] = \"0\"\r\n            newItem['TrailingRowsToRemove'] = \"0\"\r\n            newItem['Key_Fields'] = \"\"\r\n            this.items.push(newItem)\r\n            this.forceRenderer()\r\n            if (Math.ceil(this.items.length / this.itemsPerPage) > this.pageCount) {\r\n                this.pageCount += 1\r\n            }\r\n            this.page = this.pageCount\r\n            this.clicked(newItem, 'FileRoot', true)\r\n        },\r\n        paginate(val) {\r\n            this.page = val.page\r\n            this.itemsPerPage = val.itemsPerPage\r\n            this.pageCount = val.pageCount\r\n        },\r\n        resetFile() {\r\n            this.items = this.originalItems\r\n            this.forceRenderer()\r\n            this.page = 1\r\n        },\r\n        deleteSelected() {\r\n            var newItems = []\r\n            for (var item of this.items) {\r\n                if (!this.selected.includes(item.FileRoot)) {\r\n                    newItems.push(item)\r\n                }\r\n            }\r\n            this.items = []\r\n            this.items = newItems\r\n            this.selected = []\r\n        },\r\n        rulesFunc() {\r\n            if(this.editAttribute === \"FileRoot\") {\r\n                const rule1 = value => !!value || 'Required.'\r\n                this.rules.push(rule1)\r\n                var fileroots = []\r\n                for (var i of this.items) {\r\n                    fileroots.push(i['FileRoot'])\r\n                }\r\n                const rule2 = value => (this.itemToEdit['FileRoot'] == value) || (fileroots.indexOf(value) == -1) || 'Duplicate File Root'\r\n                this.rules.push(rule2)\r\n            }\r\n            else {\r\n                this.rules = []\r\n            }\r\n        },\r\n        saveExpectedFiles() {\r\n            this.originalItems = []\r\n            for(var item of this.items) {\r\n                this.originalItems.push(Object.assign({}, item))\r\n            }\r\n            this.myPortco['ExpectedFiles'] = this.originalItems\r\n            return this.myFile\r\n            \r\n        },\r\n        populateItems() {\r\n            this.originalItems = []\r\n            for (var item of this.items) {\r\n                this.originalItems.push(Object.assign({}, item))\r\n            }\r\n            this.forceRenderer()\r\n        },\r\n        changePortcoToEdit(portco) {\r\n            var portcoID = portco['PortcoID']\r\n            //check if it's a new portco\r\n            if (portco['ExpectedFiles'].length == 0) {\r\n                this.myFile.push(Object.assign({}, portco))\r\n            }\r\n            this.myPortco = this.myFile.find(p => p.PortcoID === portcoID)\r\n            this.items = this.myPortco['ExpectedFiles']\r\n            this.populateItems()\r\n        },\r\n        parse() {\r\n            this.myFile = JSON.parse(JSON.stringify(this.portcos))\r\n            for (var portco of this.myFile) {\r\n                var expectedFiles = portco[\"ExpectedFiles\"]\r\n                for (var file of expectedFiles) {\r\n                    file['FileSchema'] = JSON.parse(file['FileSchema'])\r\n                    file['FileSchema'] = file['FileSchema'].join(\", \")\r\n                    file['Key_Fields'] = JSON.parse(file['Key_Fields'])\r\n                    file['Key_Fields'] = file['Key_Fields'].join(\", \")\r\n                }\r\n            }\r\n            \r\n        },\r\n    },\r\n    mounted() {\r\n        this.parse()\r\n        var index = this.portcos.indexOf(this.portcoToEdit)\r\n        this.myPortco = this.myFile[index]\r\n        this.items = this.myPortco['ExpectedFiles']\r\n        this.populateItems()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .v-btn {\r\n        margin: 2em 1em;\r\n    }\r\n\r\n    .hide {\r\n        display: none!important;\r\n    }\r\n\r\n    .deleteIcon {\r\n        margin-left: 1em;\r\n        margin-top:16px;\r\n        font-size: 30px!important;\r\n    }\r\n\r\n    .container {\r\n        margin-top: 64px!important;\r\n    }\r\n</style>\r\n"]}]}