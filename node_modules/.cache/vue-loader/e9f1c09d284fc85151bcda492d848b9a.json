{"remainingRequest":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\src\\components\\ReadFileList.vue?vue&type=template&id=0cd8e020&scoped=true&","dependencies":[{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\src\\components\\ReadFileList.vue","mtime":1619084328670},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}