{"remainingRequest":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\src\\components\\Load.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\src\\components\\Load.vue","mtime":1619788775980},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ijawaid001\\Documents\\Front End for Ai Control Files\\control-file-editor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Load.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-container>\r\n        <v-row>\r\n            <v-btn elevation=\"2\" @click=\"newRecord\">Create New Record</v-btn>\r\n            <v-spacer></v-spacer>\r\n            <v-btn elevation=\"2\" @click=\"resetFile()\">Reset Load</v-btn>\r\n        </v-row>\r\n\r\n        <v-card>\r\n            <v-card-title>\r\n                Load\r\n                <v-spacer></v-spacer>\r\n                <v-text-field\r\n                    v-model=\"search\"\r\n                    append-icon=\"mdi-magnify\"\r\n                    label=\"Search\"\r\n                    single-line\r\n                    hide-details\r\n                    class=\"searchInput\"\r\n                ></v-text-field>\r\n                <v-icon class=\"deleteIcon\" :disabled=\"disableDelete\" @click=\"deleteSelected\">mdi-delete</v-icon>\r\n            </v-card-title>\r\n            <v-data-table\r\n                v-model=\"selected\"\r\n                show-select\r\n                :headers = \"headers\"\r\n                :items = \"items\"\r\n                :search=\"search\"\r\n                v-bind:items-per-page= \"itemsPerPage\"\r\n                v-bind:page= \"page\"\r\n                class=\"elevation-1\"\r\n                id=\"table\"\r\n                :key=\"reRender\"\r\n                @pagination=\"paginate\"\r\n            >\r\n                <template v-slot:body=\"{ items }\">\r\n                    <tbody>\r\n                        <tr v-for=\"item in items\" :key=\"item.PortcoID\">\r\n                            <td><v-checkbox :value=\"item.PortcoID\" v-model=\"selected\"></v-checkbox></td>\r\n                            <td @click=\"clicked(item, 'PortcoID', false)\">{{ item.PortcoID }}</td>\r\n                            <td @click=\"clicked(item, 'SFTPDirectory', false)\">{{ item.SFTPDirectory }}</td>\r\n                            <td @click=\"clicked(item, 'PortcoPipeline', false)\">{{ displayList(item.PortcoPipeline) }}</td>\r\n                            <td @click=\"clicked(item, 'PreStoredProcedures', false)\">{{ displayList(item.PreStoredProcedures) }}</td>\r\n                            <td @click=\"clicked(item, 'PostStoredProcedures', false)\">{{ displayList(item.PostStoredProcedures) }}</td>\r\n                            <td @click=\"clicked(item, 'ExpectedFiles', false)\">Click here to edit</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </template>\r\n                \r\n            </v-data-table>\r\n        </v-card>\r\n\r\n\r\n        <v-dialog v-model=\"dialog\" width=\"500\" v-bind:persistent=\"persistentDialog\">\r\n            <v-card>\r\n                <v-card-title>\r\n                    Edit {{this.editAttribute}}\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-form ref=\"form\">\r\n                        <v-textarea v-if=\"showBigInput\"\r\n                        v-model=\"editedItem[editAttribute]\"\r\n                        auto-grow\r\n                        autofocus\r\n                        rows=\"1\"\r\n                        ></v-textarea>\r\n                        <v-text-field v-else v-model=\"editedItem[editAttribute]\"\r\n                        :rules=\"rules\"\r\n                        hide-details=\"auto\"\r\n                        ></v-text-field>\r\n                    </v-form>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        text\r\n                        @click=\"resetAttribute\"\r\n                    >\r\n                        Reset\r\n                    </v-btn>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        text\r\n                        @click=\"saveAttribute\"\r\n                    >\r\n                        Save\r\n                    </v-btn>\r\n                    </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <expected-files v-if=\"showExpectedFiles\" :portcos=\"items\" :portcoToEdit=\"itemToEdit\" ref=\"expectedFilesVue\"></expected-files>\r\n    </v-container>\r\n\r\n    \r\n    \r\n</template>\r\n\r\n<script>\r\nimport ExpectedFiles from './ExpectedFiles.vue'\r\n//import store from '../router/index'\r\n\r\nexport default {\r\n    name: 'ControlPipelines',\r\n    components: {\r\n        ExpectedFiles\r\n    },\r\n    props: ['myFile'],\r\n    data: () => ({\r\n        items: [],\r\n        fileName: '',\r\n        portcoIDs: [],\r\n        reRender: 0,\r\n        search: '',\r\n        rules: [],\r\n        selected: [],\r\n        dialog: false,\r\n        itemsPerPage: 10,\r\n        page: 1,\r\n        pageCount: 1,\r\n        itemToEdit: '',\r\n        editedItem: '',\r\n        editAttribute: '',\r\n        expectedFiles: [],\r\n        showExpectedFiles: false,\r\n        showBigInput: false,\r\n        persistentDialog: false,\r\n        headers: [\r\n            { text:'Portco ID', value: 'PortcoID'},\r\n            { text:'SFTP Directory', value: 'SFTPDirectory'},\r\n            { text:'Portco Pipeline', value: 'PortcoPipeline'},\r\n            { text:'Pre-stored Procedures', value: 'PreStoredProcedures'},\r\n            { text:'Post-stored Procedures', value: 'PostStoredProcedures'},\r\n            { text:'Expected Files', value: 'ExpectedFiles'}\r\n        ],\r\n        listHeaders: ['PortcoPipeline', 'PreStoredProcedures', 'PostStoredProcedures'],\r\n    }),\r\n    computed: {\r\n        disableDelete() {\r\n            if (this.selected.length > 0) {\r\n                return false\r\n            }\r\n            else {\r\n                return true\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        saveLoad() {\r\n            var portcos = []\r\n            for (var item of this.items) {\r\n                for (var header of this.listHeaders) {\r\n                    //convert to arrays\r\n                    item[header] = item[header].split(\", \")\r\n                }\r\n                //stringify expected files\r\n                if (this.$refs.expectedFilesVue) {\r\n                    var id = item['PortcoID']\r\n                    var EFItems = this.$refs.expectedFilesVue.saveExpectedFiles()\r\n                    var EFs = (EFItems.find(p => p['PortcoID'] === id))['ExpectedFiles']\r\n                    var EFHeaders = [\"FileSchema\", \"Key_Fields\"]\r\n                    for (var expectedFile of EFs) {\r\n                        for(var EFHeader of EFHeaders) {\r\n                            var listToConvert = expectedFile[EFHeader]\r\n                            if(listToConvert === \"\") {\r\n                                listToConvert = \"[]\"\r\n                            }\r\n                            else {\r\n                                listToConvert = listToConvert.split(\", \")\r\n                                listToConvert = JSON.stringify(listToConvert)\r\n                            }\r\n                            expectedFile[EFHeader] = listToConvert\r\n                        }\r\n                    }\r\n                    item['ExpectedFiles'] = EFs\r\n                }\r\n                this.myFile[item.PortcoID] = item\r\n                portcos.push(item.PortcoID)\r\n            }\r\n            //make sure deleted portcos are also deleted from myFile\r\n            var otherKeys = [\"Execute\", \"TriggerPipeline\", \"Portcos\"]\r\n            for (var i of Object.keys(this.myFile)) {\r\n                if (!portcos.includes(i) && !otherKeys.includes(i)) {\r\n                    delete this.myFile[i]\r\n                }\r\n            }\r\n            this.myFile.Portcos = portcos\r\n            this.populateTable()\r\n            this.showExpectedFiles = false\r\n            return this.myFile\r\n        },\r\n        forceRenderer() {\r\n            this.reRender += 1\r\n        },\r\n        displayList(listToDisplay) {\r\n            if (listToDisplay.length > 40){\r\n                listToDisplay = listToDisplay.slice(0,listToDisplay.indexOf(\" \", 40)).concat(\" ...\")\r\n            }\r\n            return listToDisplay\r\n        }, \r\n        clicked(item, attribute, persistent) {\r\n            this.persistentDialog = persistent\r\n            this.itemToEdit = item\r\n            this.editedItem = Object.assign({}, this.itemToEdit)\r\n            this.editAttribute = attribute\r\n            if(this.editAttribute === 'ExpectedFiles') {\r\n                if (this.$refs.expectedFilesVue) {\r\n                    this.$refs.expectedFilesVue.changePortcoToEdit(this.itemToEdit)\r\n                }\r\n                else {\r\n                    this.showExpectedFiles = true\r\n                }\r\n                return\r\n            }\r\n            if (this.listHeaders.includes(this.editAttribute)) {\r\n                this.showBigInput = true\r\n            }\r\n            else {\r\n                this.showBigInput = false\r\n            }\r\n            this.rulesFunc()\r\n            this.dialog = true\r\n        },\r\n        saveAttribute() {\r\n            if (this.$refs.form.validate()) {\r\n                this.dialog = false\r\n                for (var i of this.items) {\r\n                    if (i == this.itemToEdit) {\r\n                        this.items[this.items.indexOf(i)] = this.editedItem\r\n                    }\r\n                }\r\n                this.forceRenderer()\r\n            }\r\n        },\r\n        resetAttribute() {\r\n            this.editedItem[this.editAttribute] = this.itemToEdit[this.editAttribute]\r\n        },\r\n        newRecord() {\r\n            var newItem = {}\r\n            for (var header of this.headers) {\r\n                newItem[header.value] = ''\r\n            }\r\n            newItem['ExpectedFiles'] = []\r\n            this.items.push(newItem)\r\n            this.forceRenderer()\r\n            if (Math.ceil(this.items.length / this.itemsPerPage) > this.pageCount) {\r\n                this.pageCount += 1\r\n            }\r\n            this.page = this.pageCount\r\n            this.clicked(newItem, 'PortcoID', true)\r\n        },\r\n        paginate(val) {\r\n            this.page = val.page\r\n            this.itemsPerPage = val.itemsPerPage\r\n            this.pageCount = val.pageCount\r\n        },\r\n        resetFile() {\r\n           this.populateTable()\r\n        },\r\n        deleteSelected() {\r\n            var newItems = []\r\n            for (var item of this.items) {\r\n                if (!this.selected.includes(item.PortcoID)) {\r\n                    newItems.push(item)\r\n                }\r\n            }\r\n            this.items = []\r\n            this.items = newItems\r\n            this.selected = []\r\n        },\r\n        rulesFunc() {\r\n            if(this.editAttribute === \"PortcoID\") {\r\n                const rule1 = value => !!value || 'Required.'\r\n                this.rules.push(rule1)\r\n                var portcoIDs = []\r\n                for (var i of this.items) {\r\n                    portcoIDs.push(i['PortcoID'])\r\n                }\r\n                const rule2 = value => (this.itemToEdit['PortcoID'] === value) || (portcoIDs.indexOf(value) == -1) || 'Duplicate PortcoID'\r\n                this.rules.push(rule2)\r\n            }\r\n            else {\r\n                this.rules = []\r\n            }\r\n        },\r\n        populateTable() {\r\n            this.portcoIDs = this.myFile['Portcos']\r\n            this.items = []\r\n            for (var portcoID of this.portcoIDs) {\r\n                var item = Object.assign({}, this.myFile[portcoID])\r\n                for (var header of this.listHeaders) {\r\n                    item[header] = item[header].join(\", \")\r\n                }\r\n                this.items.push(item)\r\n            }\r\n            this.forceRenderer()\r\n            this.page = 1 \r\n        },\r\n    },\r\n    mounted() {\r\n        this.populateTable()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .v-btn {\r\n        margin: 2em 1em;\r\n    }\r\n\r\n    .hide {\r\n        display: none!important;\r\n    }\r\n\r\n    .deleteIcon {\r\n        margin-left: 1em;\r\n        margin-top:16px;\r\n        font-size: 30px!important;\r\n    }\r\n\r\n    .container {\r\n        margin-top: 64px!important;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}